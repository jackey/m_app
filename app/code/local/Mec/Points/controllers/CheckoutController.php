<?phpclass Mec_Points_CheckoutController extends Mage_Core_Controller_Front_Action{		 protected function _getSession()    {        return Mage::getSingleton('core/session');    }			 public function getOnepage()    {        return Mage::getSingleton('checkout/type_onepage');    }				public function IndexAction()	{        $month_day = Mage::helper('points')->getthemonth(date('Y-m-d'));         $already_has_gift_order = Mage::helper('points')->PostErpGetCanPlaceInMonth($month_day);        if ($already_has_gift_order && FALSE) {        	$this->_redirect('checkout/cart');        	return;        }		if(Mage::helper('customer')->isLoggedIn()){			$quote = $this->getOnepage()->getQuote();			if (!$quote->hasItems() || $quote->getHasError()) {				$this->_redirect('checkout/cart');				return;			}			$this->loadLayout();   			$this->getLayout()->getBlock('head')->setTitle($this->__('Checkout'));			$this->renderLayout(); 			return;		}else{			 $this->_getSession()->addError(				$this->__('You Must Login')			 );			 			$this->_redirect('checkout/cart');			return;		}				 	}		public function ReadModel()	{		$readModel = Mage::getSingleton('core/resource')->getConnection('core_read');		return $readModel;	}			public function PvToCityAction()	{		$city_table = "lily_points_city";		$pv =  $this->getRequest()->getParam('pv');		$query = "SELECT `id`, `city` FROM {$city_table} WHERE `province_id` = {$pv}";		$citys = $this->ReadModel()->fetchAll($query);		$html = "";		$html .= "<option value=''>" .$this->__('Please Select City') . "</option>"; 						foreach($citys as $city){			$html .= "<option value='" . $city['id'] . "'>" . $city['city']. "</option>";				}		$response['success'] = true;		$response['html'] = $html;		$this->getResponse()->setBody(Zend_Json::encode($response));	}			public function CToAreaAction()	{		$are_table = "lily_points_postal";		$city = $this->getRequest()->getParam('c');		$query = "SELECT `district` FROM {$are_table} WHERE `city_id` = {$city}";		$areas = $this->ReadModel()->fetchAll($query);		$html = "";				$html .= "<option value=''>" .$this->__('Please Select Area') . "</option>"; 		foreach($areas as $area){			$html .= "<option value='" . $area['district'] . "'>" . $area['district']. "</option>";		}				$response['success'] = true;		$response['html'] = $html;		$this->getResponse()->setBody(Zend_Json::encode($response));	}		public function AjaxAction()	{		$current_elm_id = $this->getRequest()->getParam('current_elm');		$city = $this->getRequest()->getParam('city');		$area = $this->getRequest()->getParam('area');			$search_text = $this->setCurrentSearch($current_elm_id);				if($search_text == 'area'){			$select_query = "SELECT {$search_text} FROM `lily_shipping_states` WHERE `city` = '{$city}'";				}else{			$select_query = "SELECT {$search_text} FROM `lily_shipping_states` WHERE `city` = '{$city}' AND `area` = '{$area}'";		}				$search_datas = $this->ReadModel()->fetchCol($select_query);				$search_datas = array_flip(array_flip($search_datas));				// Mage::log($search_datas);				$html = "";		if($search_text == 'area'){			$html .= "<option value=''>". $this->__('Please Select Area') .'</option>';		}else{			$html .= "<option value=''>". $this->__('Please Select Store') .'</option>';		}				foreach($search_datas as $data){			$html .= "<option value='" . $data. "'>". $data."</option>";		}		// Mage::log($html);		$response['success'] = true;		$response['html'] = $html;		$response['target'] = $search_text;		$this->getResponse()->setBody(Zend_Json::encode($response));			}			public function setCurrentSearch($text)	{		$text = str_replace('store_', '', $text);		if($text == 'city'){			return 'area';		}else{			return 'store';		}	}		public function CityByCID($c_id)	{		$city_table = "lily_points_city";		$query = "SELECT `city` FROM {$city_table} WHERE `id` = {$c_id}";		$city = $this->ReadModel()->fetchOne($query);		return $city;	}		public function ProvinceByPID($p_id)	{		$province_table = "lily_points_province";		$query = "SELECT `province` FROM {$province_table} WHERE `province_id` = {$p_id}";		$province = $this->ReadModel()->fetchOne($query);		return $province;	}					public function PlaceOrderAction(){				$_customer = Mage::getSingleton('customer/session')->getCustomer();		$quote = $this->getOnepage()->getQuote();				$datas = $this->getRequest()->getParam('datas');		parse_str($datas, $data_array);		$customer_place_address_data = array();				//提货方式&配送方式		$store_type = array();			if($data_array['shipping_method'] == 'express'){			$store_type['type_code'] = 2;			$store_type['store_value'] = "";			$shipping_value = 'flatrate_flatrate';		}else{			$store_type['type_code'] = 1;			$store_type['store_value'] = $data_array['store_store'];			$shipping_value = 'freeshipping_freeshipping';		}				//地址数据		// 如果是物流发货 还需要拼接地址数据		if ($store_type["type_code"] == 2) {			// 在这里需要将省份/城市 转换到对应的名字 而不是id			if ($data_array["points_address_id"] > 0) {				$address = Mage::getModel("customer/address")->setCustomer($_customer)->load($data_array["points_address_id"]);				$customer_place_address_data['firstname'] = $address->getFirstname();				$customer_place_address_data['lastname'] = $address->getLastname();				$customer_place_address_data['street'] = $address->getStreet(1);				$customer_place_address_data['city'] = $address->getCity();				$customer_place_address_data['region_id'] = "";				$customer_place_address_data['region'] = $address->getRegion();				$customer_place_address_data['postcode'] = $address->getPostcode();				$customer_place_address_data['country_id'] = 'CN';				$customer_place_address_data['telephone'] = $address->getTelephone();			}			else {				$city = Mage::helper("points")->getCityName($data_array['ship_city']);				$province = Mage::helper("points")->getProvinceName($data_array["ship_province"]);				$customer_place_address_data['firstname'] = $data_array['order_place_name'];				$customer_place_address_data['lastname'] = $data_array['order_place_name'];				$customer_place_address_data['street'] = $data_array['ship_address'];				$customer_place_address_data['city'] = $city;				$customer_place_address_data['region_id'] = "";				$customer_place_address_data['region'] = $province;				$customer_place_address_data['postcode'] = $data_array["reveiver_zip"];				$customer_place_address_data['country_id'] = 'CN';				$customer_place_address_data['telephone'] = $data_array['order_place_tel'];				$customer_place_address_data["ship_city"] = $data_array["ship_city"];				$customer_place_address_data["ship_province"] = $data_array["ship_province"];				// 保存地址				if($data_array['save_address_book'] == 1){					$this->SaveCustomerNewAddress($_customer->getId(), $customer_place_address_data);				}			}		}		else {			$customer_place_address_data['firstname'] = $data_array['order_place_name'];			$customer_place_address_data['lastname'] = $data_array['order_place_name'];			$customer_place_address_data['street'] = $data_array['store_area'] . $data_array['store_store'];			$customer_place_address_data['city'] = $data_array['store_city'];			$customer_place_address_data['region_id'] = '';			$customer_place_address_data['region'] = $data_array['store_city'];			$customer_place_address_data['postcode'] = '门店自提';			$customer_place_address_data['country_id'] = 'CN';			$customer_place_address_data['telephone'] = $data_array['order_place_tel'];		}		Mage::log(json_encode($customer_place_address_data));				//产品数据		$items = $this->getOnepage()->getQuote()->getAllVisibleItems();		$post_erp_product_array = array();		foreach($items as $item){			// Mage::log($item->getSku());			$product_array = explode('-', $item->getSku());			if(count($product_array) > 2){				$asi_id = Mage::helper('points')->getErpAsiId($product_array[1], $product_array[2]);				$post_erp_product_array[] =  array(												'M_PRODUCT_ID__NAME' => $product_array[0],												'M_ATTRIBUTESETINSTANCE_ID__ID' => $asi_id,												'QTY' => $item->getQty()											);			}		}				// Mage::log($_customer->getVipCard());		$erp_result = $this->PostErpAddGift($customer_place_address_data, $post_erp_product_array, $store_type);		// Mage::log($erp_result);		$return_ajax_url = "";		if($erp_result[0]->code == 0 && $erp_result != "") {			// 订单成功后 如果是物流发货 要扣除1500的积分 			if ($store_type['type_code'] == 2) {				Mage::helper("lily")->cutPointsWhenExpressShipping($_customer->getVipCard());			}						//判断是否自提去查询自提验证码			$erp_gift_order_id = $erp_result[0]->objectid;			//$erp_gift_order_id = uniqid();						//生成Magento 订单			$billingAddress = $quote->getBillingAddress()->addData($customer_place_address_data);			$shippingAddress = $quote->getShippingAddress()->addData($customer_place_address_data);			$shippingAddress->setCollectShippingRates(true)->collectShippingRates()					->setShippingMethod($shipping_value)					->setPaymentMethod('checkmo');			$quote->getPayment()->importData(array('method' => 'checkmo'));			$quote->collectTotals()->save();			$service = Mage::getModel('sales/service_quote', $quote);			$service->submitAll();			$order = $service->getOrder();			// Mage::log($order->getId());						$order->setOrderPlaceName($data_array['order_place_name']);			$order->setOrderPlaceIdcard($data_array['order_place_idcard']);			$order->setOrderPlaceTel($data_array['order_place_tel']);									// Mage::log('Order Id ' . $order->getId());			Mage::log("ERP GIFT ORDER ID");			Mage::log($erp_gift_order_id);			$from_erp_datas = Mage::helper('points')->PostErpToGetDatas($erp_gift_order_id);			Mage::log("From ERP DATAS");			Mage::log(json_encode($from_erp_datas));			$order->setErpGiftNum($erp_gift_order_id);						if($store_type['type_code'] == 1){				//发送自提验证码				$order->setGiftStoreAddress($data_array['store_city'] . $data_array['store_area'] . $data_array['store_store']);				$sms_message = $from_erp_datas['ver_code'];				Mage::helper('lilysms')->sms_send($data_array['order_place_tel'], $sms_message);			}else{					$order->setErpSalesNum($from_erp_datas['erp_sales_id']);			}			$order->save();			// Mage::log($erp_gift_order_id);						Mage::getSingleton('core/session')->setPointsSucceed($erp_gift_order_id);			$this->EmptyCart(); 			$return_ajax_url = Mage::getUrl('points/checkout/psucceed');		}else{					Mage::getSingleton('core/session')->setPointsFail($erp_result[0]->message);			$return_ajax_url = Mage::getUrl('points/checkout/pfailure');					}						$response['return_url'] = $return_ajax_url;		$this->getResponse()->setBody(Zend_Json::encode($response));				// Mage::log($return_ajax_url);	}		public function EmptyCart(){		//Get cart helper        $cartHelper = Mage::helper('checkout/cart');        //Get all items from cart        $items = $cartHelper->getCart()->getItems();        //Loop through all of cart items        foreach ($items as $item) {            $itemId = $item->getItemId();            //Remove items, one by one            $cartHelper->getCart()->removeItem($itemId)->save();        }		}						public function PostErpAddGift($adress_data, $product_datas, $store_type)	{						$_customer_card = Mage::getSingleton('customer/session')->getCustomer()->getVipCard();		// $_customer_card = '546061';		$erp_user = Mage::helper('lily')->erpUser();		$erp_password = Mage::helper('lily')->erpPassword();		$erp_url = Mage::helper('lily')->erpUrl();		$post_url = Mage::getBaseUrl();		date_default_timezone_set('Asia/Shanghai');		$time = date('Y-m-d H:i:s').'.000';		$sercert = md5($erp_user.$time.md5($erp_password));		$post_data = "sip_appkey={$erp_user}&sip_timestamp={$time}&sip_sign={$sercert}";						$erp_process_processorder_params = array(				'id' => 1,				'command' => 'ProcessOrder',				'params' => array(						'masterobj' => array(							'table' => 'M_GIFTORDER',							'id' => '-1',							'VIP_ID__CARDNO' => "{$_customer_card}",							'EXCH_TYPE' => 1,							'DISPATCH_TYPE' => $store_type['type_code'],							'C_STORE_ID__NAME' => "{$store_type['store_value']}",							'RECEIVER' => "{$adress_data['firstname']}",							'REC_ADDR' => "{$adress_data['street']}",							'REC_PHONE' => "{$adress_data['telephone']}",							'C_ORIG_ID__NAME' => 'C会员礼品仓'							),												'detailobjs' => array(							'tables' => array(								'M_GIFTORDER_ITEM',							),							'refobjs' => array(								array(									'table' => 'M_GIFTORDER_ITEM',									'addList' => $product_datas,																	),							),												),						'submit' => true,						),			);				$query_params = json_encode($erp_process_processorder_params);		$post_data .= "&transactions=[{$query_params}]"; 				$header = Mage::helper('lily')->FormatHeader($post_url, $post_data);		$result = Mage::helper('lily')->PostDataToErp($erp_url, $post_data, $header);				Mage::log($post_data);		Mage::log(($result));		return json_decode($result);							// Mage::log($result);			}						public function getCustomerAddressInfo($address_id)	{		return Mage::getModel('customer/address')->load($address_id);			}			public function SaveCustomerNewAddress($_customer_id, $address_data)	{		$customAddress = Mage::getModel('customer/address');			$customAddress->setData($address_data)						->setCustomerId($_customer_id)						->setIsDefaultBilling('1')						->setIsDefaultShipping('1')						->setSaveInAddressBook('1');			try {				$customAddress->save();			}			catch (Exception $ex) {				//Zend_Debug::dump($ex->getMessage());			}		}			//跳转到成功页面	public function psucceedAction()	{		if(Mage::helper('customer')->isLoggedIn()){			$has_session =  Mage::getSingleton('core/session')->getPointsSucceed();			if(!isset($has_session)){				$this->_redirect('checkout/cart');				return;			}			$this->loadLayout();   			$this->getLayout()->getBlock('head')->setTitle($this->__('Succeed'));			$this->renderLayout(); 			return;		}else{			 			$this->_redirect('checkout/cart');			return;		}			}				public function pfailureAction()	{			if(Mage::helper('customer')->isLoggedIn()){			$points_message = Mage::getSingleton('core/session')->getPointsFail();			if(!isset($points_message)){				$this->_redirect('checkout/cart');				return;			}								$this->loadLayout();   			$this->getLayout()->getBlock('head')->setTitle($this->__('Failure'));			$this->renderLayout(); 			return;		}else{			 			$this->_redirect('checkout/cart');			return;		}				}		}